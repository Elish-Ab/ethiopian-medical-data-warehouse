name: Data Pipeline & YOLO Object Detection

on:
  push:
    branches:
      - main
      - Task-*

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install telethon explicitly
          pip install telethon

  data_scraping:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install telethon
      - name: Debug Environment Variables
        run: |
          echo "API_ID is set: ${API_ID:+yes}"
          echo "API_HASH is set: ${API_HASH:+yes}"


      - name: Set Environment Variables for Telethon
        run: |
          echo "API_ID=${{ secrets.API_ID }}" >> $GITHUB_ENV
          echo "API_HASH=${{ secrets.API_HASH }}" >> $GITHUB_ENV

      - name: Run Data Scraping
        run: |
          python scripts/scrape_data.py

  data_cleaning:
    needs: data_scraping
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Scraped Data
        uses: actions/download-artifact@v4
        with:
          name: scraped-data
          path: data/raw/

      - name: Install dbt and Dependencies
        run: |
          pip install dbt-core dbt-postgres
          dbt deps

      - name: Run DBT Models (Data Cleaning & Transformation)
        run: |
          dbt run --models telegram_project.my_first_dbt_model telegram_project.my_second_dbt_model telegram_project.telegram_messages
  
      - name: Upload Cleaned Data
        uses: actions/upload-artifact@v4
        with:
          name: cleaned-data
          path: data/processed/

  yolo_object_detection:
    needs: data_cleaning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Cleaned Data
        uses: actions/download-artifact@v4
        with:
          name: cleaned-data
          path: data/processed/

      - name: Install YOLO Dependencies
        run: |
          pip install torch torchvision
          pip install ultralytics

      - name: Train YOLO Model
        run: |
          python scripts/train_yolo.py

      - name: Run Object Detection
        run: |
          python scripts/detect_objects.py

      - name: Upload YOLO Model & Results
        uses: actions/upload-artifact@v4
        with:
          name: yolo-results
          path: results/
